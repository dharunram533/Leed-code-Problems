Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

SOURCE CODE:

int firstUniqChar(char* s) {
    int count[26] = {0}; 

    
    for (int i = 0; s[i] != '\0'; i++) {
        count[s[i] - 'a']++;
    }


    for (int i = 0; s[i] != '\0'; i++) {
        if (count[s[i] - 'a'] == 1) {
            return i;
        }
    }

    return -1; // No unique character found
}

OUTPUT:
Example 1:
Input: s = "leetcode"
Output: 0

Explanation:
The character 'l' at index 0 is the first character that does not occur at any other index.

Example 2:
Input: s = "loveleetcode"
Output: 2

Example 3:
Input: s = "aabb"
Output: -1

 
    
